# Snake-game-
Game
Here is a simple Snake Game implementation written in a single HTML file. It combines HTML, CSS, and JavaScript into one file, utilizing Bootstrap for styling.

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        canvas {
            border: 2px solid #dc3545;
            background-color: #ffffff;
        }
    </style>
</head>
<body>
    <div class="text-center">
        <h1 class="text-danger mb-3">Snake Game</h1>
        <canvas id="gameCanvas" width="400" height="400"></canvas>
        <p class="mt-3">Use arrow keys to play. Refresh the page to restart.</p>
    </div>
    <script>
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");

        const boxSize = 20;
        const canvasSize = canvas.width;
        const rows = canvasSize / boxSize;

        let snake = [{ x: 10 * boxSize, y: 10 * boxSize }];
        let direction = "RIGHT";
        let food = { 
            x: Math.floor(Math.random() * rows) * boxSize,
            y: Math.floor(Math.random() * rows) * boxSize
        };

        document.addEventListener("keydown", changeDirection);

        function drawBox(x, y, color) {
            ctx.fillStyle = color;
            ctx.fillRect(x, y, boxSize, boxSize);
            ctx.strokeStyle = "white";
            ctx.strokeRect(x, y, boxSize, boxSize);
        }

        function changeDirection(event) {
            if (event.key === "ArrowUp" && direction !== "DOWN") direction = "UP";
            if (event.key === "ArrowDown" && direction !== "UP") direction = "DOWN";
            if (event.key === "ArrowLeft" && direction !== "RIGHT") direction = "LEFT";
            if (event.key === "ArrowRight" && direction !== "LEFT") direction = "RIGHT";
        }

        function drawFood() {
            drawBox(food.x, food.y, "#28a745");
        }

        function moveSnake() {
            let head = { ...snake[0] };

            if (direction === "UP") head.y -= boxSize;
            if (direction === "DOWN") head.y += boxSize;
            if (direction === "LEFT") head.x -= boxSize;
            if (direction === "RIGHT") head.x += boxSize;

            snake.unshift(head);

            if (head.x === food.x && head.y === food.y) {
                food.x = Math.floor(Math.random() * rows) * boxSize;
                food.y = Math.floor(Math.random() * rows) * boxSize;
            } else {
                snake.pop();
            }
        }

        function checkCollision() {
            const head = snake[0];
            if (
                head.x < 0 || head.x >= canvasSize || 
                head.y < 0 || head.y >= canvasSize
            ) {
                clearInterval(gameLoop);
                alert("Game Over! Refresh to play again.");
            }

            for (let i = 1; i < snake.length; i++) {
                if (head.x === snake[i].x && head.y === snake[i].y) {
                    clearInterval(gameLoop);
                    alert("Game Over! Refresh to play again.");
                }
            }
        }

        function drawSnake() {
            snake.forEach((segment, index) => {
                drawBox(segment.x, segment.y, index === 0 ? "#dc3545" : "#ffc107");
            });
        }

        function updateGame() {
            ctx.clearRect(0, 0, canvasSize, canvasSize);
            drawFood();
            drawSnake();
            moveSnake();
            checkCollision();
        }

        const gameLoop = setInterval(updateGame, 200);
    </script>
</body>
</html>

How to Play:

1. Save the code in a file named index.html.


2. Open it in any modern web browser.


3. Use arrow keys (Up, Down, Left, Right) to control the snake.


4. The game ends when the snake collides with the wall or itself. Refresh the page to restart.



